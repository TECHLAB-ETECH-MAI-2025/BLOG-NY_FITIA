<?php

<<<<<<< HEAD:backend/var/cache/dev/ContainerXizlpCa/getLexikJwtAuthentication_CheckConfigCommandService.php
<<<<<<<< HEAD:backend/var/cache/dev/ContainerOjV1UrF/getLexikJwtAuthentication_CheckConfigCommandService.php
namespace ContainerOjV1UrF;
========
namespace ContainerXizlpCa;
>>>>>>>> 7c704d2aa (Final Pagination react cote Backend):backend/var/cache/dev/ContainerXizlpCa/getLexikJwtAuthentication_CheckConfigCommandService.php
=======
namespace ContainerTSb7RzG;
>>>>>>> 11fdd162a (Debut Notification):backend/var/cache/dev/ContainerTSb7RzG/getLexikJwtAuthentication_CheckConfigCommandService.php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLexikJwtAuthentication_CheckConfigCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'lexik_jwt_authentication.check_config_command' shared service.
     *
     * @return \Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/lexik/jwt-authentication-bundle/Command/CheckConfigCommand.php';

        $container->privates['lexik_jwt_authentication.check_config_command'] = $instance = new \Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand(($container->services['lexik_jwt_authentication.key_loader'] ?? $container->load('getLexikJwtAuthentication_KeyLoaderService')), 'RS256');

        $instance->setName('lexik:jwt:check-config');
        $instance->setDescription('Checks that the bundle is properly configured.');

        return $instance;
    }
}
