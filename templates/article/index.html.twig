{# templates/article/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        h1 {
            background-color: #002366;
            color: white;
            padding: 24px 0;
            margin: 24px;
            font-family: 'Georgia', serif;
            font-size: 2.6rem;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-align: center;
        }

        small {
            color: white;
            font-family: 'Georgia', serif;
            font-size: 0.6rem;
            letter-spacing: 2px;
        }

        span {
            color:  #002366;
            font-family: 'Georgia', serif, 'bold';
            font-size: 0.9rem;
            letter-spacing: 2px;
        }

        .card {
            border: 1px solid #dee2e6;
            border-radius: 12px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            transition: transform 0.2s ease-in-out;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem 1.25rem;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .card-header h5 {
            margin: 0;
            font-weight: 600;
            color: #343a40;
        }

        .card-body {
            font-size: 0.95rem;
        }

        .card-footer {
            background-color: #f8f9fa;
            border-top: 1px solid #dee2e6;
            padding: 0.75rem 1.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom-left-radius: 12px;
            border-bottom-right-radius: 12px;
        }

        .vote-container {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .vote-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2rem;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 5px 10px;
            border-radius: 4px;
        }

        .vote-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .vote-btn.like.active {
            color: #4CAF50;
            background-color: #e8f5e9;
        }

        .vote-btn.dislike.active {
            color: #f44336;
            background-color: #ffebee;
        }

        .vote-count {
            font-size: 0.9rem;
            min-width: 20px;
            text-align: center;
        }

        .comment-btn {
            color: rgb(2, 25, 46);
            transition: color 0.3s;
        }

        .comment-btn:hover {
            color: #0d6efd;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.vote-btn').forEach(button => {
                button.addEventListener('click', async function(e) {
                    e.preventDefault();
                    
                    if (this.disabled) return;
                    
                    const articleId = this.dataset.articleId;
                    const voteType = this.dataset.voteType;

                    try {
                        const response = await fetch(`/article/${articleId}/vote/${voteType}`, {
                            method: 'POST',
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest',
                                'Accept': 'application/json'
                            }
                        });

                        if (!response.ok) throw new Error('Erreur de vote');

                        const data = await response.json();

                        // Mise √† jour des compteurs
                        document.querySelectorAll(`[data-article-id="${articleId}"] .vote-count`).forEach(span => {
                            span.textContent = span.classList.contains('like-count') 
                                ? data.likes 
                                : data.dislikes;
                        });

                        // Mise √† jour des styles
                        document.querySelectorAll(`[data-article-id="${articleId}"] .vote-btn`).forEach(btn => {
                            btn.classList.remove('active');
                        });
                        
                        if (data.userVote === 1) {
                            document.querySelector(`[data-article-id="${articleId}"][data-vote-type="like"]`).classList.add('active');
                        } else if (data.userVote === -1) {
                            document.querySelector(`[data-article-id="${articleId}"][data-vote-type="dislike"]`).classList.add('active');
                        }

                    } catch (error) {
                        console.error('Error:', error);
                        alert('Vous devez √™tre connect√© pour voter !');
                    }
                });
            });
        });
    </script>
{% endblock %}

{% block body %}
    <div class="container">
        <h1>Mon Blog</h1>
        <br>
        <div class="row row-cols-1 row-cols-md-3 g-4">
        {% for article in articles %}
        <div style="position: fixed; bottom: 0; background: white; padding: 10px; z-index: 1000;">
            Statut connexion : {{ app.user ? 'CONNECT√â (' ~ app.user.email ~ ')' : 'NON CONNECT√â' }}
            <br>Token session : {{ app.session.get('_security_main')|slice(0, 20) ~ '...' }}
        </div>
            <div class="col">
                <div class="card h-100">
                    <div class="card-header">
                        <h5>{{ article.title }}</h5>
                        <small class="text-body-secondary">Publi√© le : {{ article.createdAt|date('Y-m-d') }}</small>
                    </div>
                    <div class="card-body">
                        <p class="card-text">{{ article.description }}</p>
                        <p class="text-muted">
                            Cat√©gorie :
                            {% if article.category %}
                            {% else %}
                                <span class="text-muted">Aucune cat√©gorie</span>
                            {% endif %}
                        </p>
                    </div>
                    <div class="card-footer">
                        <a href="{{ path('article_interact', {'id': article.id}) }}" class="comment-btn">
                            <i class="bi bi-chat-dots"></i>
                        </a>
                        <div class="vote-container">
                            <button class="vote-btn like {% if app.user and article.isLikedBy(app.user) %}active{% endif %}"
                                    data-article-id="{{ article.id }}"
                                    data-vote-type="like"
                                    {{ not app.user ? 'disabled' }}>
                                üëç <span class="vote-count like-count">{{ article.countLikes() }}</span>
                            </button>
                            <button class="vote-btn dislike {% if app.user and article.isDislikedBy(app.user) %}active{% endif %}"
                                    data-article-id="{{ article.id }}"
                                    data-vote-type="dislike"
                                    {{ not app.user ? 'disabled' }}>
                                üëé <span class="vote-count dislike-count">{{ article.countDislikes() }}</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        {% else %}
            <div class="col-12">
                <p class="text-center">Aucun article pour le moment.</p>
            </div>
        {% endfor %}
        </div>
    </div>
{% endblock %}